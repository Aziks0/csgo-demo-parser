import "google/protobuf/descriptor.proto";
import "netmessages.proto";
import "cstrike15_gcmessages.proto";

option optimize_for = SPEED;
option cc_generic_services = false;

enum USR_Messages {
	usr_VGUIMenu = 1;
	usr_Geiger = 2;
	usr_Train = 3;
	usr_HudText = 4;
	usr_SayText = 5;
	usr_SayText2 = 6;
	usr_TextMsg = 7;
	usr_HudMsg = 8;
	usr_ResetHud = 9;
	usr_GameTitle = 10;
	usr_Shake = 12;
	usr_Fade = 13;
	usr_Rumble = 14;
	usr_CloseCaption = 15;
	usr_CloseCaptionDirect = 16;
	usr_SendAudio = 17;
	usr_RawAudio = 18;
	usr_VoiceMask = 19;
	usr_RequestState = 20;
	usr_Damage = 21;
	usr_RadioText = 22;
	usr_HintText = 23;
	usr_KeyHintText = 24;
	usr_ProcessSpottedEntityUpdate = 25;
	usr_ReloadEffect = 26;
	usr_AdjustMoney = 27;
	usr_UpdateTeamMoney = 28;
	usr_StopSpectatorMode = 29;
	usr_KillCam = 30;
	usr_DesiredTimescale = 31;
	usr_CurrentTimescale = 32;
	usr_AchievementEvent = 33;
	usr_MatchEndConditions = 34;
	usr_DisconnectToLobby = 35;
	usr_PlayerStatsUpdate = 36;
	usr_DisplayInventory = 37;
	usr_WarmupHasEnded = 38;
	usr_ClientInfo = 39;
	usr_XRankGet = 40;
	usr_XRankUpd = 41;
	usr_CallVoteFailed = 45;
	usr_VoteStart = 46;
	usr_VotePass = 47;
	usr_VoteFailed = 48;
	usr_VoteSetup = 49;
	usr_ServerRankRevealAll = 50;
	usr_SendLastKillerDamageToClient = 51;
	usr_ServerRankUpdate = 52;
	usr_ItemPickup = 53;
	usr_ShowMenu = 54;
	usr_BarTime = 55;
	usr_AmmoDenied = 56;
	usr_MarkAchievement = 57;
	usr_MatchStatsUpdate = 58;
	usr_ItemDrop = 59;
	usr_GlowPropTurnOff = 60;
	usr_SendPlayerItemDrops = 61;
	usr_RoundBackupFilenames = 62;
	usr_SendPlayerItemFound = 63;
	usr_ReportHit = 64;
	usr_XpUpdate = 65;
	usr_QuestProgress = 66;
	usr_ScoreLeaderboardData = 67;
	usr_PlayerDecalDigitalSignature = 68;
	usr_WeaponSound = 69;
	usr_UpdateScreenHealthBar = 70;
	usr_EntityOutlineHighlight = 71;
	usr_SSUI = 72;
	usr_SurvivalStats = 73;
	usr_DisconnectToLobby2 = 74;
	usr_EndOfMatchAllPlayersData = 75;
	usr_RoundImpactScoreData = 79;
	usr_CurrentRoundOdds = 80;
	usr_DeepStats = 81;
	usr_UtilMessage = 82;
	usr_UtilMessageResponse = 83;
}

enum ECSUsrMsg_DisconnectToLobby_Action {
	k_ECSUsrMsg_DisconnectToLobby_Action_Default = 0;
	k_ECSUsrMsg_DisconnectToLobby_Action_GoQueue = 1;
}

message CUSRMsg_VGUIMenu {
	message Subkey {
		optional string name = 1;
		optional string str = 2;
	}

	optional string name = 1;
	optional bool show = 2;
	repeated .CUSRMsg_VGUIMenu.Subkey subkeys = 3;
}

message CUSRMsg_Geiger {
	optional int32 range = 1;
}

message CUSRMsg_Train {
	optional int32 train = 1;
}

message CUSRMsg_HudText {
	optional string text = 1;
}

message CUSRMsg_SayText {
	optional int32 ent_idx = 1;
	optional string text = 2;
	optional bool chat = 3;
	optional bool textallchat = 4;
}

message CUSRMsg_SayText2 {
	optional int32 ent_idx = 1;
	optional bool chat = 2;
	optional string msg_name = 3;
	repeated string params = 4;
	optional bool textallchat = 5;
}

message CUSRMsg_TextMsg {
	optional int32 msg_dst = 1;
	repeated string params = 3;
}

message CUSRMsg_HudMsg {
	optional int32 channel = 1;
	optional .CMsgVector2D pos = 2;
	optional .CMsgRGBA clr1 = 3;
	optional .CMsgRGBA clr2 = 4;
	optional int32 effect = 5;
	optional float fade_in_time = 6;
	optional float fade_out_time = 7;
	optional float hold_time = 9;
	optional float fx_time = 10;
	optional string text = 11;
}

message CUSRMsg_Shake {
	optional int32 command = 1;
	optional float local_amplitude = 2;
	optional float frequency = 3;
	optional float duration = 4;
}

message CUSRMsg_Fade {
	optional int32 duration = 1;
	optional int32 hold_time = 2;
	optional int32 flags = 3;
	optional .CMsgRGBA clr = 4;
}

message CUSRMsg_Rumble {
	optional int32 index = 1;
	optional int32 data = 2;
	optional int32 flags = 3;
}

message CUSRMsg_CloseCaption {
	optional uint32 hash = 1;
	optional int32 duration = 2;
	optional bool from_player = 3;
	optional string cctoken = 4;
}

message CUSRMsg_CloseCaptionDirect {
	optional uint32 hash = 1;
	optional int32 duration = 2;
	optional bool from_player = 3;
}

message CUSRMsg_SendAudio {
	optional string radio_sound = 1;
}

message CUSRMsg_RawAudio {
	optional int32 pitch = 1;
	optional int32 entidx = 2;
	optional float duration = 3;
	optional string voice_filename = 4;
}

message CUSRMsg_VoiceMask {
	message PlayerMask {
		optional int32 game_rules_mask = 1;
		optional int32 ban_masks = 2;
	}

	repeated .CUSRMsg_VoiceMask.PlayerMask player_masks = 1;
	optional bool player_mod_enable = 2;
}

message CUSRMsg_Damage {
	optional int32 amount = 1;
	optional .CMsgVector inflictor_world_pos = 2;
	optional int32 victim_entindex = 3;
}

message CUSRMsg_RadioText {
	optional int32 msg_dst = 1;
	optional int32 client = 2;
	optional string msg_name = 3;
	repeated string params = 4;
}

message CUSRMsg_HintText {
	optional string text = 1;
}

message CUSRMsg_KeyHintText {
	repeated string hints = 1;
}

message CUSRMsg_ProcessSpottedEntityUpdate {
	message SpottedEntityUpdate {
		optional int32 entity_idx = 1;
		optional int32 class_id = 2;
		optional int32 origin_x = 3;
		optional int32 origin_y = 4;
		optional int32 origin_z = 5;
		optional int32 angle_y = 6;
		optional bool defusr = 7;
		optional bool player_has_defusr = 8;
		optional bool player_has_c4 = 9;
	}

	optional bool new_update = 1;
	repeated .CUSRMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
}

message CUSRMsg_SendPlayerItemDrops {
	repeated .CEconItemPreviewDataBlock entity_updates = 1;
}

message CUSRMsg_SendPlayerItemFound {
	optional .CEconItemPreviewDataBlock iteminfo = 1;
	optional int32 entindex = 2;
}

message CUSRMsg_ReloadEffect {
	optional int32 entidx = 1;
	optional int32 actanim = 2;
	optional float origin_x = 3;
	optional float origin_y = 4;
	optional float origin_z = 5;
}

message CUSRMsg_WeaponSound {
	optional int32 entidx = 1;
	optional float origin_x = 2;
	optional float origin_y = 3;
	optional float origin_z = 4;
	optional string sound = 5;
	optional float timestamp = 6;
}

message CUSRMsg_UpdateScreenHealthBar {
	optional int32 entidx = 1;
	optional float healthratio_old = 2;
	optional float healthratio_new = 3;
	optional int32 style = 4;
}

message CUSRMsg_EntityOutlineHighlight {
	optional int32 entidx = 1;
	optional bool removehighlight = 2;
}

message CUSRMsg_AdjustMoney {
	optional int32 amount = 1;
}

message CUSRMsg_ReportHit {
	optional float pos_x = 1;
	optional float pos_y = 2;
	optional float timestamp = 4;
	optional float pos_z = 3;
}

message CUSRMsg_KillCam {
	optional int32 obs_mode = 1;
	optional int32 first_target = 2;
	optional int32 second_target = 3;
}

message CUSRMsg_DesiredTimescale {
	optional float desired_timescale = 1;
	optional float duration_realtime_sec = 2;
	optional int32 interpolator_type = 3;
	optional float start_blend_time = 4;
}

message CUSRMsg_CurrentTimescale {
	optional float cur_timescale = 1;
}

message CUSRMsg_AchievementEvent {
	optional int32 achievement = 1;
	optional int32 count = 2;
	optional int32 usr_id = 3;
}

message CUSRMsg_MatchEndConditions {
	optional int32 fraglimit = 1;
	optional int32 mp_maxrounds = 2;
	optional int32 mp_winlimit = 3;
	optional int32 mp_timelimit = 4;
}

message CUSRMsg_PlayerStatsUpdate {
	message Stat {
		optional int32 idx = 1;
		optional int32 delta = 2;
	}

	optional int32 version = 1;
	repeated .CUSRMsg_PlayerStatsUpdate.Stat stats = 4;
	optional int32 usr_id = 5;
	optional int32 crc = 6;
}

message CUSRMsg_DisplayInventory {
	optional bool display = 1;
	optional int32 usr_id = 2;
}

message CUSRMsg_QuestProgress {
	optional uint32 quest_id = 1;
	optional uint32 normal_points = 2;
	optional uint32 bonus_points = 3;
	optional bool is_event_quest = 4;
}

message CUSRMsg_ScoreLeaderboardData {
	optional .ScoreLeaderboardData data = 1;
}

message CUSRMsg_PlayerDecalDigitalSignature {
	optional .PlayerDecalDigitalSignature data = 1;
}

message CUSRMsg_XRankGet {
	optional int32 mode_idx = 1;
	optional int32 controller = 2;
}

message CUSRMsg_XRankUpd {
	optional int32 mode_idx = 1;
	optional int32 controller = 2;
	optional int32 ranking = 3;
}

message CUSRMsg_CallVoteFailed {
	optional int32 reason = 1;
	optional int32 time = 2;
}

message CUSRMsg_VoteStart {
	optional int32 team = 1;
	optional int32 ent_idx = 2;
	optional int32 vote_type = 3;
	optional string disp_str = 4;
	optional string details_str = 5;
	optional string other_team_str = 6;
	optional bool is_yes_no_vote = 7;
	optional int32 entidx_target = 8;
}

message CUSRMsg_VotePass {
	optional int32 team = 1;
	optional int32 vote_type = 2;
	optional string disp_str = 3;
	optional string details_str = 4;
}

message CUSRMsg_VoteFailed {
	optional int32 team = 1;
	optional int32 reason = 2;
}

message CUSRMsg_VoteSetup {
	repeated string potential_issues = 1;
}

message CUSRMsg_SendLastKillerDamageToClient {
	optional int32 num_hits_given = 1;
	optional int32 damage_given = 2;
	optional int32 num_hits_taken = 3;
	optional int32 damage_taken = 4;
}

message CUSRMsg_ServerRankUpdate {
	message RankUpdate {
		optional int32 account_id = 1;
		optional int32 rank_old = 2;
		optional int32 rank_new = 3;
		optional int32 num_wins = 4;
		optional float rank_change = 5;
		optional int32 rank_type_id = 6;
	}

	repeated .CUSRMsg_ServerRankUpdate.RankUpdate rank_update = 1;
}

message CUSRMsg_XpUpdate {
	optional .CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded data = 1;
}

message CUSRMsg_ItemPickup {
	optional string item = 1;
}

message CUSRMsg_ShowMenu {
	optional int32 bits_valid_slots = 1;
	optional int32 display_time = 2;
	optional string menu_string = 3;
}

message CUSRMsg_BarTime {
	optional string time = 1;
}

message CUSRMsg_AmmoDenied {
	optional int32 ammoIdx = 1;
}

message CUSRMsg_MarkAchievement {
	optional string achievement = 1;
}

message CUSRMsg_MatchStatsUpdate {
	optional string update = 1;
}

message CUSRMsg_ItemDrop {
	optional int64 itemid = 1;
	optional bool death = 2;
}

message CUSRMsg_GlowPropTurnOff {
	optional int32 entidx = 1;
}

message CUSRMsg_RoundBackupFilenames {
	optional int32 count = 1;
	optional int32 index = 2;
	optional string filename = 3;
	optional string nicename = 4;
}

message CUSRMsg_SSUI {
	optional bool show = 1;
	optional float start_time = 2;
	optional float end_time = 3;
}

message CUSRMsg_SurvivalStats {
	message Fact {
		optional int32 type = 1;
		optional int32 display = 2;
		optional int32 value = 3;
		optional float interestingness = 4;
	}

	message Placement {
		optional uint64 xuid = 1;
		optional int32 teamnumber = 2;
		optional int32 placement = 3;
	}

	message Damage {
		optional uint64 xuid = 1;
		optional int32 to = 2;
		optional int32 to_hits = 3;
		optional int32 from = 4;
		optional int32 from_hits = 5;
	}

	optional uint64 xuid = 1;
	repeated .CUSRMsg_SurvivalStats.Fact facts = 2;
	repeated .CUSRMsg_SurvivalStats.Placement usrs = 3;
	repeated .CUSRMsg_SurvivalStats.Damage damages = 5;
	optional int32 ticknumber = 4;
}

message CUSRMsg_EndOfMatchAllPlayersData {
	message Accolade {
		optional int32 eaccolade = 1;
		optional float value = 2;
		optional int32 position = 3;
	}

	message PlayerData {
		optional int32 entindex = 1;
		optional uint64 xuid = 2;
		optional string name = 3;
		optional int32 teamnumber = 4;
		optional .CUSRMsg_EndOfMatchAllPlayersData.Accolade nomination = 5;
		repeated .CEconItemPreviewDataBlock items = 6;
		optional int32 playercolor = 7;
		optional bool isbot = 8;
	}

	repeated .CUSRMsg_EndOfMatchAllPlayersData.PlayerData allplayerdata = 1;
	optional int32 scene = 2;
}

message CUSRMsg_RoundImpactScoreData {
	message RisEvent {
		message Victim {
			optional int32 team_number = 1;
			optional int32 entindex = 2;
			optional uint64 xuid = 3;
			optional int32 color = 4;
			optional bool is_bot = 5;
			optional bool is_dead = 6;
		}

		message Objective {
			optional int32 type = 1;
		}

		message Damage {
			optional int32 target_entindex = 1;
			optional uint64 target_xuid = 2;
			optional int32 health_removed = 3;
			optional int32 num_hits = 4;
			optional int32 return_health_removed = 5;
			optional int32 num_return_hits = 6;
		}

		optional float timestamp = 1;
		optional int32 terrorist_odds = 2;
		optional int32 ct_alive = 3;
		optional int32 t_alive = 4;
		optional .CUSRMsg_RoundImpactScoreData.RisEvent.Victim victim_data = 5;
		optional .CUSRMsg_RoundImpactScoreData.RisEvent.Objective objective_data = 6;
		repeated .CUSRMsg_RoundImpactScoreData.RisEvent.Damage all_damage_data = 7;
	}

	message InitialConditions {
		optional int32 ct_equip_value = 1;
		optional int32 t_equip_value = 2;
		optional int32 terrorist_odds = 3;
	}

	optional .CUSRMsg_RoundImpactScoreData.InitialConditions init_conditions = 1;
	repeated .CUSRMsg_RoundImpactScoreData.RisEvent all_ris_event_data = 2;
}

message CUSRMsg_CurrentRoundOdds {
	optional int32 odds = 1;
}

message CUSRMsg_DeepStats {
	optional .CMsgGCCStrike15_ClientDeepStats stats = 1;
}

message CUSRMsg_ResetHud {
	optional bool reset = 1;
}

message CUSRMsg_GameTitle {
	optional int32 dummy = 1;
}

message CUSRMsg_RequestState {
	optional int32 dummy = 1;
}

message CUSRMsg_StopSpectatorMode {
	optional int32 dummy = 1;
}

message CUSRMsg_DisconnectToLobby {
	optional int32 dummy = 1;
}

message CUSRMsg_WarmupHasEnded {
	optional int32 dummy = 1;
}

message CUSRMsg_ClientInfo {
	optional int32 dummy = 1;
}

message CUSRMsg_ServerRankRevealAll {
	optional int32 seconds_till_shutdown = 1;
	optional .CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation = 2;
}

message CUSRMsg_UtilMessage {
	optional string util_action = 1;
	optional int32 util1 = 2;
	optional int32 util2 = 3;
	optional int32 util3 = 4;
	optional int32 util4 = 5;
	optional int32 util5 = 6;
}

message CUSRMsg_UtilMessageResponse {
	message ItemDetail {
		optional int32 index = 1;
		optional int32 hash = 2;
		optional int32 crc = 3;
		optional string name = 4;
	}

	optional fixed32 crc = 1;
	optional int32 item_count = 2;
	optional fixed32 crc2 = 3;
	optional int32 item_count2 = 4;
	repeated int32 crc_part = 5;
	repeated int32 crc_part2 = 6;
	optional int32 client_timestamp = 7;
	optional int32 platform = 8;
	repeated .CUSRMsg_UtilMessageResponse.ItemDetail itemdetails = 9;
	optional int32 itemgroup = 10;
}
